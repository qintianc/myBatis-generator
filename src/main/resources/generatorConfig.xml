<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
	<properties resource="generatorConfig.properties" />

	<context id="oracle-lxjk" defaultModelType="flat" targetRuntime="MyBatis3Simple">

		<!-- 生成的Java文件的编码，默认使用当前平台的编码 -->
		<property name="javaFileEncoding" value="UTF-8" />


		<!-- 取消默认注释信息 -->
		<commentGenerator>
			<property name="suppressAllComments" value="true" />
			<property name="suppressDate" value="true" />
		</commentGenerator>

		<!-- 连接数据库 -->
		<jdbcConnection driverClass="${jdbc_driverClassName}" connectionURL="${jdbc_url}" userId="${jdbc_username}" password="${jdbc_password}">
		</jdbcConnection>

		<!-- 把JDBC DECIMAL 和 NUMERIC 类型解析为java.math.BigDecimal -->
		<javaTypeResolver>
			<property name="forceBigDecimals" value="true" />
		</javaTypeResolver>


		<!-- targetPackage ：生成实体类存放的包名，targetProject：指定目录 -->
		<javaModelGenerator targetPackage="model" targetProject="src/main/java">
			<!-- 设置是否在getter方法中，对String类型字段调用trim()方法 -->
			<property name="trimStrings" value="true" />
		</javaModelGenerator>

		<!-- 生成SQL map的XML文件生成器， 注意，在Mybatis3之后，可以使用mapper.xml文件+Mapper接口（或者不用mapper接口）， 或者只使用Mapper接口+Annotation，所以，如果 javaClientGenerator配置中配置了需要生成XML的话，这个元素就必须配置 -->
		<sqlMapGenerator targetPackage="mapper" targetProject="src/main/resources" />

		<!-- targetPackage：mapper接口的生成位置 -->
		<javaClientGenerator type="XMLMAPPER" targetPackage="dao" targetProject="src/main/java" />

		<!-- domainObjectName为设置表的实体类名，非必需 -->
		<table tableName="T_LX_INTEREST_RECORD_POLICY" domainObjectName="InterestRecordPolicy">
			<!-- 字段类型的转换 -->
			<columnOverride column="ID" javaType="java.lang.Long" />
			<columnOverride column="RECORD_ID" javaType="java.lang.Long" />
		</table>

	</context>
</generatorConfiguration>